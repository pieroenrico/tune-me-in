/**
 * This script reads TailwindCSS merged config and exports
 * an object for usage inside React
 * 
 * The script is exported as a JS file to {output}
 * 
 * Format of the object:
 * 
 * {
 *      {breakpoint}: {
 *          value: <number value>,
 *          size: <css string>,
 *          mediaQuery: (min-width: <css string>)
 *      }
 * }
 */

const fs = require('fs');
const path = require('path');
const tailwindConfig = require('./tailwind.config')
const resolveConfig = require('./node_modules/tailwindcss/resolveConfig')
const fullConfig = resolveConfig(tailwindConfig)
const twScreens = fullConfig.theme.screens;
const output = './src/responsive/Screens.js';

let screens = [];
Object.keys(twScreens).forEach(function(breakpoint) {
    screens.push(`
        '${breakpoint}': {
            value: ${parseInt(twScreens[breakpoint])},
            size: '${twScreens[breakpoint]}',
            mediaQuery: '(min-width: ${twScreens[breakpoint]})'
        }
    `)
})

const dataScreens = `// This is autogenerated by running
// npm run tw:dump-screens
const Screens = {
    ${screens.join(',')}
}
export default Screens;`;

fs.writeFile(path.join(__dirname, output), dataScreens, function(err) {
    if (err) return console.log(err);
    console.log('Dumped!');
});